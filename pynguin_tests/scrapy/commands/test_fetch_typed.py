# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import fetch_typed as module_0
import scrapy.exceptions as module_1


def test_case_0():
    command_0 = module_0.Command()
    str_0 = command_0.long_desc()
    assert (
        str_0
        == "Fetch a URL using the Scrapy downloader and print its content to stdout. You may want to use --nolog to disable logging"
    )
    str_1 = "KQ"
    list_0 = [str_0, str_1]
    none_type_0 = None
    with pytest.raises(module_1.UsageError):
        command_0.run(list_0, none_type_0)


def test_case_1():
    command_0 = module_0.Command()


@pytest.mark.xfail(strict=True)
def test_case_2():
    command_0 = module_0.Command()
    str_0 = command_0.short_desc()
    assert str_0 == "Fetch a URL using the Scrapy downloader"
    var_0 = command_0.syntax()
    assert var_0 == "[options] <url>"
    var_1 = var_0.__repr__()
    assert var_1 == "'[options] <url>'"
    var_1.add_options(command_0)


def test_case_3():
    command_0 = module_0.Command()
    none_type_0 = command_0.long_desc()


@pytest.mark.xfail(strict=True)
def test_case_4():
    command_0 = module_0.Command()
    command_0.add_options(command_0)


def test_case_5():
    str_0 = "\t"
    command_0 = module_0.Command()
    with pytest.raises(module_1.UsageError):
        command_0.run(str_0, command_0)
